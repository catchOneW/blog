{"version":3,"sources":["webpack:///../web-base/side-proj/gatsby-site/src/pages/aboutme.js","webpack:///../web-base/side-proj/gatsby-site/.cache/public-page-renderer.js","webpack:///../web-base/side-proj/gatsby-site/.cache/gatsby-browser-entry.js","webpack:///../web-base/side-proj/gatsby-site/.cache/public-page-renderer-prod.js","webpack:///../web-base/side-proj/gatsby-site/src/components/header.js","webpack:///../web-base/side-proj/gatsby-site/src/components/layout.js","webpack:///../web-base/side-proj/gatsby-site/src/components/seo.js"],"names":["aboutme","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","className","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","createElement","InternalPageRenderer","assign","json","Header","siteTitle","core_browser_esm","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","defaultProps","Layout","children","data","_856328897","react_default","a","Fragment","header","site","siteMetadata","title","paddingTop","Date","getFullYear","href","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"oLAMe,SAASA,IACpB,OACIC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACIF,OAAAC,EAAA,EAAAD,CAACG,EAAA,EAAD,CAAMC,GAAG,KAAT,MACAJ,OAAAC,EAAA,EAAAD,CAAA,OAAKK,UAAU,QACXL,OAAAC,EAAA,EAAAD,CAAA,OAAKK,UAAU,QAAf,OACAL,OAAAC,EAAA,EAAAD,CAAA,+BAEJA,OAAAC,EAAA,EAAAD,CAAA,OAAKK,UAAU,QACXL,OAAAC,EAAA,EAAAD,CAAA,OAAKK,UAAU,QAAf,YACAL,OAAAC,EAAA,EAAAD,CAAA,6CACAA,OAAAC,EAAA,EAAAD,CAAA,iEACAA,OAAAC,EAAA,EAAAD,CAAA,6EAEJA,OAAAC,EAAA,EAAAD,CAAA,OAAKK,UAAU,QACXL,OAAAC,EAAA,EAAAD,CAAA,OAAKK,UAAU,QAAf,UACAL,OAAAC,EAAA,EAAAD,CAAA,mDAGAA,OAAAC,EAAA,EAAAD,CAAA,gFAGAA,OAAAC,EAAA,EAAAD,CAAA,qDACAA,OAAAC,EAAA,EAAAD,CAAA,gCAEJA,OAAAC,EAAA,EAAAD,CAAA,OAAKK,UAAU,QACXL,OAAAC,EAAA,EAAAD,CAAA,OAAKK,UAAU,QAAf,UACAL,OAAAC,EAAA,EAAAD,CAAA,uFAEJA,OAAAC,EAAA,EAAAD,CAAA,OAAKK,UAAU,QACXL,OAAAC,EAAA,EAAAD,CAAA,OAAKK,UAAU,QAAf,MACAL,OAAAC,EAAA,EAAAD,CAAA,gDCrChB,IAAsBM,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6HCctBK,QAAOC,QAELC,IAAMC,cAAc,6JCMhCC,UAjBU,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGEL,IAAMM,cAAcC,IAApBpB,OAAAqB,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,qFCHLC,EAAS,SAAAP,GAAA,IAAGQ,EAAHR,EAAGQ,UAAH,OACbxB,OAAAyB,EAAA,EAAAzB,CAAA,UACE0B,MAAO,CACLC,WAAU,gBACVC,aAAY,YAGd5B,OAAAyB,EAAA,EAAAzB,CAAA,OACE0B,MAAO,CACLG,OAAM,SACNC,SAAU,IACVC,QAAO,sBAGT/B,OAAAyB,EAAA,EAAAzB,CAAA,MAAI0B,MAAO,CAAEG,OAAQ,IACnB7B,OAAAyB,EAAA,EAAAzB,CAACgC,EAAA,EAAD,CACE5B,GAAG,IACHsB,MAAO,CACLO,MAAK,QACLC,eAAc,SAGfV,OAWXD,EAAOY,aAAe,CACpBX,UAAS,IAGID,eCUAa,IArCA,SAAApB,GAAkB,IAAfqB,EAAerB,EAAfqB,SACVC,EAAIC,EAAAD,KAUV,OACEtC,OAAAyB,EAAA,EAAAzB,CAAAwC,EAAAC,EAAAC,SAAA,KACE1C,OAAAyB,EAAA,EAAAzB,CAAC2C,EAAD,CAAQnB,UAAWc,EAAKM,KAAKC,aAAaC,QAC1C9C,OAAAyB,EAAA,EAAAzB,CAAA,OACE0B,MAAO,CACLG,OAAM,SACNC,SAAU,IACVC,QAAO,wBACPgB,WAAY,IAGd/C,OAAAyB,EAAA,EAAAzB,CAAA,YAAOqC,GACPrC,OAAAyB,EAAA,EAAAzB,CAAA,oBACK,IAAIgD,MAAOC,cADhB,mBAGEjD,OAAAyB,EAAA,EAAAzB,CAAA,KAAGkD,KAAK,4BAAR,6FC5BV,SAASC,EAATnC,GAAiD,IAAlCoC,EAAkCpC,EAAlCoC,YAAaC,EAAqBrC,EAArBqC,KAAMC,EAAetC,EAAfsC,KAAMR,EAAS9B,EAAT8B,MAC9BF,EADuCW,EAAAjB,KACvCM,KAcFY,EAAkBJ,GAAeR,EAAKC,aAAaO,YAEzD,OACEpD,OAAAC,EAAA,EAAAD,CAACyD,EAAAhB,EAAD,CACEiB,eAAgB,CACdL,QAEFP,MAAOA,EACPa,cAAa,QAAUf,EAAKC,aAAaC,MACzCQ,KAAM,CACJ,CACEM,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAASf,GAEX,CACEgB,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASjB,EAAKC,aAAakB,QAE7B,CACEH,KAAI,gBACJC,QAASf,GAEX,CACEc,KAAI,sBACJC,QAASL,IAEXQ,OAAOV,KAKfH,EAAIhB,aAAe,CACjBkB,KAAI,KACJC,KAAM,GACNF,YAAW,IAUED","file":"component---src-pages-aboutme-js-3ec49b8459a93dae28ac.js","sourcesContent":["import React from 'react'\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { Global, css } from '@emotion/core'\r\nimport { Link } from \"gatsby\"\r\n\r\nexport default function aboutme() {\r\n    return (\r\n        <Layout>\r\n            <Link to=\"/\">返回</Link>\r\n            <div className=\"list\">\r\n                <div className=\"type\">联系我</div>\r\n                <p>手机/微信:13618618168</p>\r\n            </div>\r\n            <div className=\"list\">\r\n                <div className=\"type\">我期望加入的公司</div>\r\n                <p>公司有>10人的前端团队(之前公司前端不多，主要工作量在我身上)</p>\r\n                <p>主要使用react或vue技术栈 ，并且有成熟的构建流程如代码规范，类型检查，自动化测试，持续集成部署等</p>\r\n                <p>26~30岁我想要全力以赴，希望这份工作我能做得长久一点,并且在技术上更有深度，在业务上多解决质量，效率，性能，安全方面的问题</p>\r\n            </div>\r\n            <div className=\"list\">\r\n                <div className=\"type\">我能做的项目</div>\r\n                <p>\r\n                    web端：熟练的有 官网，后台管理，运营统计大数据展示，尝试过 富文本编辑器\r\n                </p>\r\n                <p>\r\n                    移动端：熟练的有 微信小程序，hybridApp内嵌H5页面，h5活动页，h5小游戏,尝试过 3d的小游戏和\r\n                   react-native</p>\r\n                <p>服务端：c#，node express koa,leancloud云服务对象存储</p>\r\n                <p>pc端：electron有简单尝试过</p>\r\n            </div>\r\n            <div className=\"list\">\r\n                <div className=\"type\">github</div>\r\n                <p>https://github.com/catchOneW(主要是工作中写的一些demo，能独立开发组件库，后续会把以前写过的组件逐渐整理好再开源)</p>\r\n            </div>\r\n            <div className=\"list\">\r\n                <div className=\"type\">博客</div>\r\n                <p>待整理好后再更新...</p>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `rebeccapurple`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `0px 1.0875rem 1.45rem`,\r\n          paddingTop: 0,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer>\r\n          © {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}